# Generated by Django 5.2.6 on 2025-10-17 11:29

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0004_delete_projectrole'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('address', models.TextField(verbose_name='Address')),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10, verbose_name='Latitude')),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11, verbose_name='Longitude')),
                ('radius', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Radius (km)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('code', models.CharField(max_length=20, verbose_name='Code')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Company')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'ordering': ['name'],
                'unique_together': {('company', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('code', models.CharField(max_length=20, verbose_name='Code')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Company')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hr_payroll.department', verbose_name='Department')),
            ],
            options={
                'verbose_name': 'Designation',
                'verbose_name_plural': 'Designations',
                'ordering': ['name'],
                'unique_together': {('company', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=50, unique=True, verbose_name='Employee ID')),
                ('zkteco_id', models.CharField(blank=True, help_text='Employee ID used in the ZKTeco attendance machine (optional)', max_length=50, null=True, unique=True, verbose_name='ZKTeco ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Last Name')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, null=True, verbose_name='Gender')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=3, null=True, verbose_name='Blood Group')),
                ('marital_status', models.CharField(blank=True, choices=[('S', 'Single'), ('M', 'Married'), ('D', 'Divorced'), ('W', 'Widowed')], max_length=20, null=True, verbose_name='Marital Status')),
                ('nid', models.CharField(blank=True, default='', max_length=30, null=True, verbose_name='National ID')),
                ('passport_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='Passport Number')),
                ('contact_number', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='Contact Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Address')),
                ('emergency_contact', models.CharField(blank=True, max_length=20, null=True, verbose_name='Emergency Contact')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Emergency Contact Name')),
                ('emergency_contact_relation', models.CharField(blank=True, max_length=50, null=True, verbose_name='Emergency Contact Relation')),
                ('present_address', models.TextField(blank=True, null=True, verbose_name='Present Address')),
                ('permanent_address', models.TextField(blank=True, null=True, verbose_name='Permanent Address')),
                ('joining_date', models.DateField(blank=True, null=True, verbose_name='Joining Date')),
                ('confirmation_date', models.DateField(blank=True, null=True, verbose_name='Confirmation Date')),
                ('job_type', models.CharField(choices=[('FT', 'Full-Time'), ('PT', 'Part-Time'), ('CT', 'Contract'), ('IN', 'Internship'), ('TP', 'Temporary')], default='FT', max_length=2, verbose_name='Job Type')),
                ('employment_status', models.CharField(choices=[('active', 'Active'), ('probation', 'Probation'), ('suspended', 'Suspended'), ('terminated', 'Terminated'), ('resigned', 'Resigned')], default='active', max_length=20, verbose_name='Employment Status')),
                ('resignation_date', models.DateField(blank=True, null=True, verbose_name='Resignation Date')),
                ('termination_date', models.DateField(blank=True, null=True, verbose_name='Termination Date')),
                ('highest_education', models.CharField(blank=True, max_length=100, null=True, verbose_name='Highest Education')),
                ('university', models.CharField(blank=True, max_length=200, null=True, verbose_name='University/Institution')),
                ('passing_year', models.IntegerField(blank=True, null=True, verbose_name='Passing Year')),
                ('base_salary', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text="The employee's basic monthly gross salary.", max_digits=10, null=True, verbose_name='Basic Salary (Monthly)')),
                ('per_hour_rate', models.DecimalField(blank=True, decimal_places=2, default=Decimal('30.00'), help_text='Explicitly set rate for hourly attendance/calculations.', max_digits=8, null=True, verbose_name='Per Hour Rate')),
                ('expected_working_hours', models.FloatField(blank=True, default=8.0, help_text='Daily contractual working hours (e.g., 8.0)', null=True, verbose_name='Expected Working Hours (Daily)')),
                ('overtime_rate', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='Explicitly set fixed rate for overtime.', max_digits=8, null=True, verbose_name='Overtime Rate (per hour)')),
                ('overtime_grace_minutes', models.IntegerField(blank=True, default=15, null=True, verbose_name='Overtime Grace Minutes')),
                ('house_rent_allowance', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=10, null=True, verbose_name='House Rent Allowance')),
                ('medical_allowance', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=10, null=True, verbose_name='Medical Allowance')),
                ('conveyance_allowance', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=10, null=True, verbose_name='Conveyance Allowance')),
                ('food_allowance', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=10, null=True, verbose_name='Food Allowance')),
                ('attendance_bonus', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=10, null=True, verbose_name='Attendance Bonus')),
                ('festival_bonus', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=10, null=True, verbose_name='Festival Bonus')),
                ('provident_fund', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=10, null=True, verbose_name='Provident Fund')),
                ('tax_deduction', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=10, null=True, verbose_name='Tax Deduction')),
                ('loan_deduction', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=10, null=True, verbose_name='Loan Deduction')),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bank Name')),
                ('bank_account_no', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Bank Account No')),
                ('bank_branch', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bank Branch')),
                ('payment_method', models.CharField(blank=True, default='Cash', max_length=20, null=True, verbose_name='Payment Method')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Bio/Description')),
                ('skills', models.TextField(blank=True, help_text='Comma separated list of skills', null=True, verbose_name='Skills')),
                ('experience', models.TextField(blank=True, null=True, verbose_name='Previous Experience')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_employees', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hr_payroll.department', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hr_payroll.designation', verbose_name='Designation')),
                ('user', models.ForeignKey(blank=True, help_text='Linked Django user account for login/mobile attendance (optional)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_user', to=settings.AUTH_USER_MODEL, verbose_name='System User Account')),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'ordering': ['employee_id'],
            },
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Complaint Title')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=20, verbose_name='Priority')),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('under_review', 'Under Review'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='submitted', max_length=20, verbose_name='Status')),
                ('submitted_date', models.DateField(auto_now_add=True, verbose_name='Submitted Date')),
                ('resolution', models.TextField(blank=True, null=True, verbose_name='Resolution')),
                ('resolved_date', models.DateField(blank=True, null=True, verbose_name='Resolved Date')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks')),
                ('name', models.CharField(max_length=100, verbose_name='Template Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('default_cycle_type', models.CharField(default='monthly', max_length=20, verbose_name='Default Cycle Type')),
                ('payment_day', models.IntegerField(default=5, help_text='Day of month for payment', verbose_name='Payment Day')),
                ('auto_calculate_overtime', models.BooleanField(default=True, verbose_name='Auto Calculate Overtime')),
                ('auto_calculate_deductions', models.BooleanField(default=True, verbose_name='Auto Calculate Deductions')),
                ('auto_calculate_bonuses', models.BooleanField(default=False, verbose_name='Auto Calculate Bonuses')),
                ('perfect_attendance_bonus', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Perfect Attendance Bonus')),
                ('minimum_attendance_for_bonus', models.DecimalField(decimal_places=2, default=95.0, max_digits=5, verbose_name='Min Attendance % for Bonus')),
                ('per_day_absence_deduction_rate', models.DecimalField(decimal_places=2, default=100.0, max_digits=5, verbose_name='Per Day Absence Deduction %')),
                ('late_arrival_penalty', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Late Arrival Penalty')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_complaints', to=settings.AUTH_USER_MODEL, verbose_name='Assigned To')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Company')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to='hr_payroll.employee', verbose_name='Employee')),
            ],
            options={
                'verbose_name': 'Payroll Template',
                'verbose_name_plural': 'Payroll Templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('resume', 'Resume/CV'), ('certificate', 'Certificate'), ('contract', 'Contract'), ('nid', 'National ID'), ('passport', 'Passport'), ('other', 'Other')], max_length=50, verbose_name='Document Type')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('file', models.FileField(blank=True, help_text='Upload document file (PDF, DOC, DOCX, JPG, PNG)', max_length=500, null=True, upload_to='employee_documents/%Y/%m/%d/', verbose_name='Document File')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Uploaded At')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='hr_payroll.employee', verbose_name='Employee')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Uploaded By')),
            ],
            options={
                'verbose_name': 'Employee Document',
                'verbose_name_plural': 'Employee Documents',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeSeparation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('separation_date', models.DateField(verbose_name='Separation Date')),
                ('reason', models.TextField(blank=True, null=True, verbose_name='Reason')),
                ('is_voluntary', models.BooleanField(default=True, verbose_name='Voluntary')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr_payroll.employee', verbose_name='Employee')),
            ],
            options={
                'verbose_name': 'Employee Separation',
                'verbose_name_plural': 'Employee Separations',
                'ordering': ['-separation_date'],
            },
        ),
        migrations.CreateModel(
            name='LeaveType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('code', models.CharField(max_length=20, verbose_name='Code')),
                ('max_days', models.PositiveIntegerField(default=0, verbose_name='Maximum Days')),
                ('paid', models.BooleanField(default=True, verbose_name='Paid')),
                ('carry_forward', models.BooleanField(default=False, verbose_name='Carry Forward')),
                ('max_carry_forward_days', models.PositiveIntegerField(default=0, verbose_name='Max Carry Forward Days')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Company')),
            ],
            options={
                'verbose_name': 'Leave Type',
                'verbose_name_plural': 'Leave Types',
                'ordering': ['name'],
                'unique_together': {('company', 'code')},
            },
        ),
        migrations.CreateModel(
            name='LeaveApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('reason', models.TextField(blank=True, null=True, verbose_name='Reason')),
                ('status', models.CharField(choices=[('P', 'Pending'), ('A', 'Approved'), ('R', 'Rejected')], default='P', max_length=10, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Approved By')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_applications', to='hr_payroll.employee', verbose_name='Employee')),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr_payroll.leavetype', verbose_name='Leave Type')),
            ],
            options={
                'verbose_name': 'Leave Application',
                'verbose_name_plural': 'Leave Applications',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20, verbose_name='Priority')),
                ('published_date', models.DateField(verbose_name='Published Date')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Expiry Date')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Company')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Notice',
                'verbose_name_plural': 'Notices',
                'ordering': ['-published_date'],
            },
        ),
        migrations.CreateModel(
            name='Overtime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Overtime Date')),
                ('start_time', models.TimeField(verbose_name='Start Time')),
                ('end_time', models.TimeField(verbose_name='End Time')),
                ('hours', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Overtime Hours')),
                ('reason', models.TextField(verbose_name='Reason')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=20, verbose_name='Status')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Approved At')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Approved By')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overtime_requests', to='hr_payroll.employee', verbose_name='Employee')),
            ],
            options={
                'verbose_name': 'Overtime Request',
                'verbose_name_plural': 'Overtime Requests',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_period_start', models.DateField(verbose_name='Review Period Start')),
                ('review_period_end', models.DateField(verbose_name='Review Period End')),
                ('overall_rating', models.IntegerField(blank=True, choices=[(1, 'Poor'), (2, 'Below Average'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], null=True, verbose_name='Overall Rating')),
                ('strengths', models.TextField(blank=True, null=True, verbose_name='Strengths')),
                ('weaknesses', models.TextField(blank=True, null=True, verbose_name='Areas for Improvement')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('reviewed', 'Reviewed'), ('approved', 'Approved')], default='draft', max_length=20, verbose_name='Status')),
                ('review_date', models.DateField(blank=True, null=True, verbose_name='Review Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performances', to='hr_payroll.employee', verbose_name='Employee')),
                ('reviewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Reviewer')),
            ],
            options={
                'verbose_name': 'Performance Review',
                'verbose_name_plural': 'Performance Reviews',
                'ordering': ['-review_period_end'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal_title', models.CharField(max_length=200, verbose_name='Goal Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('target_date', models.DateField(verbose_name='Target Date')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20, verbose_name='Status')),
                ('achievement', models.TextField(blank=True, null=True, verbose_name='Achievement')),
                ('completion_date', models.DateField(blank=True, null=True, verbose_name='Completion Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_goals', to='hr_payroll.employee', verbose_name='Employee')),
                ('performance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='hr_payroll.performance', verbose_name='Performance Review')),
            ],
            options={
                'verbose_name': 'Performance Goal',
                'verbose_name_plural': 'Performance Goals',
                'ordering': ['-target_date'],
            },
        ),
        migrations.CreateModel(
            name='Recruitment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=200, verbose_name='Job Title')),
                ('job_description', models.TextField(verbose_name='Job Description')),
                ('requirements', models.TextField(blank=True, null=True, verbose_name='Requirements')),
                ('vacancies', models.PositiveIntegerField(default=1, verbose_name='Number of Vacancies')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('open', 'Open'), ('closed', 'Closed'), ('on_hold', 'On Hold')], default='draft', max_length=20, verbose_name='Status')),
                ('posted_date', models.DateField(verbose_name='Posted Date')),
                ('closing_date', models.DateField(verbose_name='Closing Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Company')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hr_payroll.department', verbose_name='Department')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hr_payroll.designation', verbose_name='Designation')),
            ],
            options={
                'verbose_name': 'Recruitment',
                'verbose_name_plural': 'Recruitments',
                'ordering': ['-posted_date'],
            },
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applicant_name', models.CharField(max_length=100, verbose_name='Applicant Name')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', models.CharField(max_length=20, verbose_name='Phone')),
                ('resume', models.TextField(blank=True, null=True, verbose_name='Resume/CV')),
                ('cover_letter', models.TextField(blank=True, null=True, verbose_name='Cover Letter')),
                ('status', models.CharField(choices=[('applied', 'Applied'), ('shortlisted', 'Shortlisted'), ('interview', 'Interview Scheduled'), ('selected', 'Selected'), ('rejected', 'Rejected')], default='applied', max_length=20, verbose_name='Status')),
                ('applied_date', models.DateField(auto_now_add=True, verbose_name='Applied Date')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('recruitment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='hr_payroll.recruitment', verbose_name='Recruitment')),
            ],
            options={
                'verbose_name': 'Job Application',
                'verbose_name_plural': 'Job Applications',
                'ordering': ['-applied_date'],
            },
        ),
        migrations.CreateModel(
            name='Resignation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resignation_date', models.DateField(verbose_name='Resignation Date')),
                ('last_working_date', models.DateField(verbose_name='Last Working Date')),
                ('reason', models.TextField(verbose_name='Reason')),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='submitted', max_length=20, verbose_name='Status')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Approved At')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Approved By')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resignations', to='hr_payroll.employee', verbose_name='Employee')),
            ],
            options={
                'verbose_name': 'Resignation',
                'verbose_name_plural': 'Resignations',
                'ordering': ['-resignation_date'],
            },
        ),
        migrations.CreateModel(
            name='Clearance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clearance_date', models.DateField(verbose_name='Clearance Date')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('on_hold', 'On Hold')], default='pending', max_length=20, verbose_name='Status')),
                ('hr_clearance', models.BooleanField(default=False, verbose_name='HR Clearance')),
                ('finance_clearance', models.BooleanField(default=False, verbose_name='Finance Clearance')),
                ('it_clearance', models.BooleanField(default=False, verbose_name='IT Clearance')),
                ('admin_clearance', models.BooleanField(default=False, verbose_name='Admin Clearance')),
                ('final_settlement_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Final Settlement Amount')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('cleared_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Cleared By')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clearances', to='hr_payroll.employee', verbose_name='Employee')),
                ('resignation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hr_payroll.resignation', verbose_name='Resignation')),
            ],
            options={
                'verbose_name': 'Clearance',
                'verbose_name_plural': 'Clearances',
                'ordering': ['-clearance_date'],
            },
        ),
        migrations.CreateModel(
            name='Roster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Company')),
            ],
            options={
                'verbose_name': 'Roster',
                'verbose_name_plural': 'Rosters',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('start_time', models.TimeField(verbose_name='Start Time')),
                ('end_time', models.TimeField(verbose_name='End Time')),
                ('break_time', models.PositiveIntegerField(default=60, verbose_name='Break Time (minutes)')),
                ('grace_time', models.PositiveIntegerField(default=15, verbose_name='Grace Time (minutes)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Company')),
            ],
            options={
                'verbose_name': 'Shift',
                'verbose_name_plural': 'Shifts',
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='RosterAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roster_assignments', to='hr_payroll.employee', verbose_name='Employee')),
                ('roster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roster_assignments', to='hr_payroll.roster', verbose_name='Roster')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roster_assignment', to='hr_payroll.shift', verbose_name='Shift')),
            ],
            options={
                'verbose_name': 'Roster Assignment',
                'verbose_name_plural': 'Roster Assignments',
                'ordering': ['roster__name', 'employee__first_name'],
                'unique_together': {('roster', 'employee')},
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='default_shift',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hr_payroll.shift', verbose_name='Default Shift'),
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Training Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('trainer', models.CharField(max_length=100, verbose_name='Trainer Name')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('duration_hours', models.PositiveIntegerField(default=0, verbose_name='Duration (Hours)')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Company')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Training',
                'verbose_name_plural': 'Trainings',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='ZkDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('ip_address', models.CharField(max_length=15, verbose_name='IP Address')),
                ('port', models.PositiveIntegerField(default=4370, verbose_name='Port')),
                ('password', models.CharField(blank=True, max_length=50, null=True, verbose_name='Password')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('last_synced', models.DateTimeField(blank=True, null=True, verbose_name='Last Synced')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Company')),
            ],
            options={
                'verbose_name': 'ZKTeco Device',
                'verbose_name_plural': 'ZKTeco Devices',
                'ordering': ['name'],
                'unique_together': {('company', 'ip_address')},
            },
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('date', models.DateField(verbose_name='Date')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Company')),
            ],
            options={
                'verbose_name': 'Holiday',
                'verbose_name_plural': 'Holidays',
                'ordering': ['-date'],
                'unique_together': {('company', 'date')},
            },
        ),
        migrations.CreateModel(
            name='LeaveBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entitled_days', models.FloatField(default=0, verbose_name='Entitled Days')),
                ('used_days', models.FloatField(default=0, verbose_name='Used Days')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr_payroll.employee', verbose_name='Employee')),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr_payroll.leavetype', verbose_name='Leave Type')),
            ],
            options={
                'verbose_name': 'Leave Balance',
                'verbose_name_plural': 'Leave Balances',
                'ordering': ['employee__employee_id'],
                'unique_together': {('employee', 'leave_type')},
            },
        ),
        migrations.CreateModel(
            name='RosterDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('roster_assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roster_days', to='hr_payroll.rosterassignment', verbose_name='Roster Assignment')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roster_days', to='hr_payroll.shift', verbose_name='Shift')),
            ],
            options={
                'verbose_name': 'Roster Day',
                'verbose_name_plural': 'Roster Days',
                'ordering': ['date'],
                'unique_together': {('roster_assignment', 'date')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='employee',
            unique_together={('company', 'employee_id')},
        ),
        migrations.CreateModel(
            name='AttendanceProcessorConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Default Configuration', max_length=100, verbose_name='Configuration Name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('grace_minutes', models.PositiveIntegerField(default=15, help_text='Late arrival grace period in minutes', verbose_name='Grace Minutes')),
                ('early_out_threshold_minutes', models.PositiveIntegerField(default=30, help_text='Minutes before end time to consider as early departure', verbose_name='Early Out Threshold (minutes)')),
                ('overtime_start_after_minutes', models.PositiveIntegerField(default=15, help_text='Minutes after scheduled end time to start overtime calculation', verbose_name='Overtime Start After (minutes)')),
                ('minimum_overtime_minutes', models.PositiveIntegerField(default=60, help_text='Minimum overtime duration to be eligible for overtime pay', verbose_name='Minimum Overtime Minutes')),
                ('weekend_friday', models.BooleanField(default=True, verbose_name='Friday Weekend')),
                ('weekend_saturday', models.BooleanField(default=False, verbose_name='Saturday Weekend')),
                ('weekend_sunday', models.BooleanField(default=False, verbose_name='Sunday Weekend')),
                ('weekend_monday', models.BooleanField(default=False, verbose_name='Monday Weekend')),
                ('weekend_tuesday', models.BooleanField(default=False, verbose_name='Tuesday Weekend')),
                ('weekend_wednesday', models.BooleanField(default=False, verbose_name='Wednesday Weekend')),
                ('weekend_thursday', models.BooleanField(default=False, verbose_name='Thursday Weekend')),
                ('default_break_minutes', models.PositiveIntegerField(default=60, help_text="Default break time if shift doesn't specify", verbose_name='Default Break Time (minutes)')),
                ('use_shift_break_time', models.BooleanField(default=True, help_text='Use shift-specific break time instead of default', verbose_name='Use Shift Break Time')),
                ('break_deduction_method', models.CharField(choices=[('fixed', 'Fixed'), ('proportional', 'Proportional')], default='fixed', help_text='Method to calculate break time deduction', max_length=20, verbose_name='Break Deduction Method')),
                ('enable_minimum_working_hours_rule', models.BooleanField(default=False, help_text='Convert present to absent if working hours below threshold', verbose_name='Enable Minimum Working Hours Rule')),
                ('minimum_working_hours_for_present', models.FloatField(default=4.0, help_text='Minimum hours required to mark as present', verbose_name='Minimum Working Hours for Present')),
                ('enable_working_hours_half_day_rule', models.BooleanField(default=False, help_text='Convert to half day based on working hours range', verbose_name='Enable Working Hours Half Day Rule')),
                ('half_day_minimum_hours', models.FloatField(default=4.0, help_text='Minimum hours for half day qualification', verbose_name='Half Day Minimum Hours')),
                ('half_day_maximum_hours', models.FloatField(default=6.0, help_text='Maximum hours for half day qualification', verbose_name='Half Day Maximum Hours')),
                ('require_both_in_and_out', models.BooleanField(default=False, help_text='Mark as absent if either check-in or check-out is missing', verbose_name='Require Both In and Out Time')),
                ('enable_maximum_working_hours_rule', models.BooleanField(default=False, help_text='Flag records with excessive working hours', verbose_name='Enable Maximum Working Hours Rule')),
                ('maximum_allowable_working_hours', models.FloatField(default=16.0, help_text='Maximum allowed working hours per day', verbose_name='Maximum Allowable Working Hours')),
                ('enable_dynamic_shift_detection', models.BooleanField(default=False, help_text='Automatically detect shift based on attendance pattern', verbose_name='Enable Dynamic Shift Detection')),
                ('dynamic_shift_tolerance_minutes', models.PositiveIntegerField(default=30, help_text='Tolerance in minutes for shift pattern matching', verbose_name='Dynamic Shift Tolerance (minutes)')),
                ('multiple_shift_priority', models.CharField(choices=[('least_break', 'Least Break Time'), ('shortest_duration', 'Shortest Duration'), ('alphabetical', 'Alphabetical'), ('highest_score', 'Highest Score')], default='least_break', help_text='Priority method when multiple shifts match', max_length=20, verbose_name='Multiple Shift Priority')),
                ('dynamic_shift_fallback_to_default', models.BooleanField(default=True, help_text="Use employee's default shift if dynamic detection fails", verbose_name='Dynamic Shift Fallback to Default')),
                ('use_shift_grace_time', models.BooleanField(default=False, help_text='Use grace time from shift instead of global grace time', verbose_name='Use Shift-Specific Grace Time')),
                ('enable_consecutive_absence_flagging', models.BooleanField(default=False, help_text='Flag employees with consecutive absences as termination risk', verbose_name='Enable Consecutive Absence Flagging')),
                ('consecutive_absence_termination_risk_days', models.PositiveIntegerField(default=5, help_text='Number of consecutive absent days to flag as termination risk', verbose_name='Consecutive Absence Risk Days')),
                ('enable_max_early_out_flagging', models.BooleanField(default=False, help_text='Flag employees with excessive early departures', verbose_name='Enable Max Early Out Flagging')),
                ('max_early_out_threshold_minutes', models.PositiveIntegerField(default=120, help_text='Minutes of early departure to consider excessive', verbose_name='Max Early Out Threshold (minutes)')),
                ('max_early_out_occurrences', models.PositiveIntegerField(default=3, help_text='Number of early departures in a month to flag', verbose_name='Max Early Out Occurrences')),
                ('overtime_calculation_method', models.CharField(choices=[('shift_based', 'Shift Based'), ('employee_based', 'Employee Based'), ('fixed_hours', 'Fixed Hours')], default='employee_based', help_text='Method to calculate overtime', max_length=20, verbose_name='Overtime Calculation Method')),
                ('holiday_overtime_full_day', models.BooleanField(default=True, help_text='Count all holiday working hours as overtime', verbose_name='Holiday Overtime Full Day')),
                ('weekend_overtime_full_day', models.BooleanField(default=True, help_text='Count all weekend working hours as overtime', verbose_name='Weekend Overtime Full Day')),
                ('late_affects_overtime', models.BooleanField(default=False, help_text='Reduce overtime if employee arrives late', verbose_name='Late Arrival Affects Overtime')),
                ('separate_ot_break_time', models.PositiveIntegerField(default=0, help_text='Additional break time to deduct from overtime', verbose_name='Separate OT Break Time (minutes)')),
                ('use_employee_specific_grace', models.BooleanField(default=True, help_text='Use employee-specific grace time if available', verbose_name='Use Employee Specific Grace')),
                ('use_employee_specific_overtime', models.BooleanField(default=True, help_text='Use employee-specific overtime settings if available', verbose_name='Use Employee Specific Overtime')),
                ('use_employee_expected_hours', models.BooleanField(default=True, help_text='Use employee-specific expected working hours', verbose_name='Use Employee Expected Hours')),
                ('late_to_absent_days', models.PositiveIntegerField(default=3, help_text='Convert late to absent after consecutive late days', verbose_name='Late to Absent Days')),
                ('holiday_before_after_absent', models.BooleanField(default=True, help_text='Consider attendance around holidays for absence rules', verbose_name='Holiday Before/After Absent')),
                ('weekend_before_after_absent', models.BooleanField(default=True, help_text='Consider attendance around weekends for absence rules', verbose_name='Weekend Before/After Absent')),
                ('require_holiday_presence', models.BooleanField(default=False, help_text='Require attendance on designated working holidays', verbose_name='Require Holiday Presence')),
                ('include_holiday_analysis', models.BooleanField(default=True, help_text='Include holiday patterns in attendance analysis', verbose_name='Include Holiday Analysis')),
                ('holiday_buffer_days', models.PositiveIntegerField(default=1, help_text='Days before/after holiday to consider for analysis', verbose_name='Holiday Buffer Days')),
                ('show_absent_employees', models.BooleanField(default=True, help_text='Include absent employees in reports', verbose_name='Show Absent Employees')),
                ('show_leave_employees', models.BooleanField(default=True, help_text='Include employees on leave in reports', verbose_name='Show Leave Employees')),
                ('show_holiday_status', models.BooleanField(default=True, help_text='Show holiday information in reports', verbose_name='Show Holiday Status')),
                ('include_roster_info', models.BooleanField(default=True, help_text='Include roster information in attendance records', verbose_name='Include Roster Info')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_attendance_configs', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('dynamic_shift_fallback_shift', models.ForeignKey(blank=True, help_text='Fixed shift to use if dynamic detection fails and no default shift', null=True, on_delete=django.db.models.deletion.SET_NULL, to='hr_payroll.shift', verbose_name='Fallback Shift')),
            ],
            options={
                'verbose_name': 'Attendance Processor Configuration',
                'verbose_name_plural': 'Attendance Processor Configurations',
                'ordering': ['-is_active', 'name'],
                'unique_together': {('company', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('check_in_time', models.DateTimeField(blank=True, null=True, verbose_name='Check In Time')),
                ('check_out_time', models.DateTimeField(blank=True, null=True, verbose_name='Check Out Time')),
                ('status', models.CharField(choices=[('A', 'Absent'), ('P', 'Present'), ('W', 'Weekly Off'), ('H', 'Holiday'), ('L', 'Leave')], default='A', max_length=10, verbose_name='Status')),
                ('overtime_hours', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Overtime Hours')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr_payroll.employee', verbose_name='Employee')),
                ('shift', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hr_payroll.shift', verbose_name='Shift')),
            ],
            options={
                'verbose_name': 'Attendance',
                'verbose_name_plural': 'Attendance',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['employee', 'date'], name='hr_payroll__employe_4c2ba3_idx'), models.Index(fields=['date'], name='hr_payroll__date_4ae44c_idx')],
                'unique_together': {('employee', 'date')},
            },
        ),
        migrations.CreateModel(
            name='TrainingEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateField(auto_now_add=True, verbose_name='Enrollment Date')),
                ('status', models.CharField(choices=[('enrolled', 'Enrolled'), ('completed', 'Completed'), ('failed', 'Failed'), ('withdrawn', 'Withdrawn')], default='enrolled', max_length=20, verbose_name='Status')),
                ('completion_date', models.DateField(blank=True, null=True, verbose_name='Completion Date')),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Score')),
                ('feedback', models.TextField(blank=True, null=True, verbose_name='Feedback')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_enrollments', to='hr_payroll.employee', verbose_name='Employee')),
                ('training', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='hr_payroll.training', verbose_name='Training')),
            ],
            options={
                'verbose_name': 'Training Enrollment',
                'verbose_name_plural': 'Training Enrollments',
                'ordering': ['-enrollment_date'],
                'unique_together': {('training', 'employee')},
            },
        ),
        migrations.CreateModel(
            name='UserLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Is Primary')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_locations', to='hr_payroll.location', verbose_name='Location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_locations', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Location',
                'verbose_name_plural': 'User Locations',
                'ordering': ['user__username', 'location__name'],
                'unique_together': {('user', 'location')},
            },
        ),
        migrations.CreateModel(
            name='AttendanceLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(verbose_name='Timestamp')),
                ('status_code', models.IntegerField(default=0, verbose_name='Status Code')),
                ('punch_type', models.CharField(default='UNKNOWN', max_length=50, verbose_name='Punch Type')),
                ('source_type', models.CharField(choices=[('ZK', 'ZKTeco Device'), ('MN', 'Manual'), ('MB', 'Mobile')], default='ZK', max_length=10, verbose_name='Source Type')),
                ('attendance_type', models.CharField(blank=True, choices=[('IN', 'Check-in'), ('OUT', 'Check-out')], help_text='Check-in or Check-out type', max_length=3, null=True, verbose_name='Attendance Type')),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, help_text='GPS latitude coordinate', max_digits=10, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, help_text='GPS longitude coordinate', max_digits=11, null=True, verbose_name='Longitude')),
                ('is_within_radius', models.BooleanField(default=False, help_text='Whether attendance was marked within location radius', verbose_name='Is Within Radius')),
                ('distance', models.DecimalField(blank=True, decimal_places=2, help_text='Distance from location center in kilometers', max_digits=8, null=True, verbose_name='Distance (km)')),
                ('location_name', models.TextField(blank=True, help_text='Location device information', null=True, verbose_name='Location Name')),
                ('device_info', models.TextField(blank=True, help_text='Mobile device information', null=True, verbose_name='Device Info')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address from which attendance was marked', null=True, verbose_name='IP Address')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.ForeignKey(blank=True, help_text='User who marked attendance (for mobile attendance)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendance_logs', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr_payroll.employee', verbose_name='Employee')),
                ('location', models.ForeignKey(blank=True, help_text='Location where attendance was marked', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendance_logs', to='hr_payroll.location', verbose_name='Location')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr_payroll.zkdevice', verbose_name='Device')),
            ],
            options={
                'verbose_name': 'Attendance Log',
                'verbose_name_plural': 'Attendance Logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['employee', 'timestamp'], name='hr_payroll__employe_a47a15_idx'), models.Index(fields=['device', 'timestamp'], name='hr_payroll__device__9a0204_idx'), models.Index(fields=['user', 'timestamp'], name='hr_payroll__user_id_c70712_idx'), models.Index(fields=['location', 'timestamp'], name='hr_payroll__locatio_804882_idx'), models.Index(fields=['source_type', 'timestamp'], name='hr_payroll__source__76e9f1_idx')],
            },
        ),
    ]
