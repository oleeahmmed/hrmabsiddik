# Generated by Django 5.2.6 on 2025-10-16 13:38

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('technical_lead', 'Technical Lead'), ('project_manager', 'Project Manager'), ('supervisor', 'Supervisor'), ('employee', 'Employee')], max_length=20, unique=True, verbose_name='Role')),
                ('hierarchy_level', models.IntegerField(default=0, help_text='0=Admin, 1=Tech Lead, 2=PM, 3=Supervisor, 4=Employee', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Hierarchy Level')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Project Role',
                'verbose_name_plural': 'Project Roles',
                'ordering': ['hierarchy_level'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('company_code', models.CharField(db_index=True, help_text='Unique identifier for the company', max_length=20, unique=True, verbose_name='Company Code')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='Company Name')),
                ('address_line1', models.CharField(blank=True, max_length=255, verbose_name='Address Line 1')),
                ('address_line2', models.CharField(blank=True, max_length=255, verbose_name='Address Line 2')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='State/Province')),
                ('zip_code', models.CharField(blank=True, max_length=20, verbose_name='ZIP/Postal Code')),
                ('country', models.CharField(default='Bangladesh', max_length=100, verbose_name='Country')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=255, verbose_name='Email')),
                ('website', models.URLField(blank=True, max_length=255, verbose_name='Website')),
                ('tax_id', models.CharField(blank=True, help_text='VAT/EIN/GST/TIN Number', max_length=50, verbose_name='Tax ID')),
                ('registration_number', models.CharField(blank=True, max_length=50, verbose_name='Registration Number')),
                ('currency', models.CharField(default='BDT', help_text='e.g., BDT, USD, EUR', max_length=10, verbose_name='Currency')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logos/', verbose_name='Logo')),
                ('location_restricted', models.BooleanField(default=True, help_text='If enabled, employees must be within location radius for attendance', verbose_name='Location Restricted')),
                ('level', models.PositiveIntegerField(default=0, editable=False, verbose_name='Hierarchy Level')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Is Active')),
                ('parent', models.ForeignKey(blank=True, help_text='Leave empty for root company', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subsidiaries', to='core.company', verbose_name='Parent Company')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'ordering': ['level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='Project Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('in_progress', 'In Progress'), ('on_hold', 'On Hold'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], db_index=True, default='planning', max_length=20, verbose_name='Status')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20, verbose_name='Priority')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('total_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Total Budget')),
                ('spent_budget', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Spent Budget')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Is Active')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_items', to='core.company', verbose_name='Company')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_owned', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
                ('project_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_projects', to=settings.AUTH_USER_MODEL, verbose_name='Project Manager')),
                ('technical_lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='led_projects', to=settings.AUTH_USER_MODEL, verbose_name='Technical Lead')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('title', models.CharField(db_index=True, max_length=255, verbose_name='Task Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('status', models.CharField(choices=[('todo', 'To Do'), ('in_progress', 'In Progress'), ('on_hold', 'On Hold'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], db_index=True, default='todo', max_length=20, verbose_name='Status')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20, verbose_name='Priority')),
                ('due_date', models.DateField(verbose_name='Due Date')),
                ('estimated_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Estimated Hours')),
                ('actual_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Actual Hours')),
                ('is_blocked', models.BooleanField(default=False, verbose_name='Is Blocked')),
                ('blocking_reason', models.TextField(blank=True, verbose_name='Blocking Reason')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Assigned By')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Assigned To')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_items', to='core.company', verbose_name='Company')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_owned', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='core.project', verbose_name='Project')),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
                'ordering': ['due_date', '-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('comment', models.TextField(verbose_name='Comment')),
                ('commented_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_comments', to=settings.AUTH_USER_MODEL, verbose_name='Commented By')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_items', to='core.company', verbose_name='Company')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_owned', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.task', verbose_name='Task')),
            ],
            options={
                'verbose_name': 'Task Comment',
                'verbose_name_plural': 'Task Comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='Phone Number')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, verbose_name='Gender')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='user_profiles/', verbose_name='Profile Picture')),
                ('address_line1', models.CharField(blank=True, max_length=255, verbose_name='Address Line 1')),
                ('address_line2', models.CharField(blank=True, max_length=255, verbose_name='Address Line 2')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='State/Province')),
                ('zip_code', models.CharField(blank=True, max_length=20, verbose_name='ZIP/Postal Code')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Country')),
                ('designation', models.CharField(blank=True, max_length=100, verbose_name='Designation')),
                ('department', models.CharField(blank=True, max_length=100, verbose_name='Department')),
                ('employee_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Employee ID')),
                ('joining_date', models.DateField(blank=True, null=True, verbose_name='Joining Date')),
                ('bio', models.TextField(blank=True, verbose_name='Bio')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, verbose_name='Emergency Contact Name')),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20, verbose_name='Emergency Contact Phone')),
                ('emergency_contact_relation', models.CharField(blank=True, max_length=50, verbose_name='Emergency Contact Relation')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Is Active')),
                ('company', models.ForeignKey(help_text='User must be associated with a company', on_delete=django.db.models.deletion.PROTECT, related_name='user_profiles', to='core.company', verbose_name='Company')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['company_code'], name='core_compan_company_d10a50_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['parent', 'is_active'], name='core_compan_parent__7fe3e2_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['company', 'is_active', 'status'], name='core_projec_company_6c3fdd_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['owner', 'company'], name='core_projec_owner_i_c52462_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='project',
            unique_together={('company', 'name')},
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['company', 'status', 'due_date'], name='core_task_company_9eee96_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['project', 'assigned_to'], name='core_task_project_ebbc98_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['company', 'is_active'], name='core_userpr_company_c9fed7_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['employee_id'], name='core_userpr_employe_7133ad_idx'),
        ),
    ]
